### YamlMime:ManagedReference
items:
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  commentId: T:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  id: CloudAdapter
  parent: warmup_project_teama_web_app.Controllers.Adapters
  children:
  - warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.#ctor
  - warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Authenticate(System.String)
  - warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
  - warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
  - warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToRequestFormat
  - warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel(System.Collections.Generic.List{RootStructure})
  langs:
  - csharp
  - vb
  name: CloudAdapter
  nameWithType: CloudAdapter
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  type: Class
  source:
    remote:
      path: src/warmup-project-teama-web-app/Controllers/Adapters/CloudAdapter.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: CloudAdapter
    path: Controllers/Adapters/CloudAdapter.cs
    startLine: 11
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Controllers.Adapters
  syntax:
    content: 'public class CloudAdapter : ICloudAdapter'
    content.vb: >-
      Public Class CloudAdapter
          Implements ICloudAdapter
  inheritance:
  - System.Object
  implements:
  - warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.#ctor
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.#ctor
  id: '#ctor'
  parent: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  langs:
  - csharp
  - vb
  name: CloudAdapter()
  nameWithType: CloudAdapter.CloudAdapter()
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.CloudAdapter()
  type: Constructor
  source:
    remote:
      path: src/warmup-project-teama-web-app/Controllers/Adapters/CloudAdapter.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: .ctor
    path: Controllers/Adapters/CloudAdapter.cs
    startLine: 16
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Controllers.Adapters
  syntax:
    content: public CloudAdapter()
    content.vb: Public Sub New
  overload: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Authenticate(System.String)
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Authenticate(System.String)
  id: Authenticate(System.String)
  parent: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  langs:
  - csharp
  - vb
  name: Authenticate(String)
  nameWithType: CloudAdapter.Authenticate(String)
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Authenticate(System.String)
  type: Method
  source:
    remote:
      path: src/warmup-project-teama-web-app/Controllers/Adapters/CloudAdapter.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: Authenticate
    path: Controllers/Adapters/CloudAdapter.cs
    startLine: 20
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Controllers.Adapters
  syntax:
    content: public Task<bool> Authenticate(string user_id)
    parameters:
    - id: user_id
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function Authenticate(user_id As String) As Task(Of Boolean)
  overload: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Authenticate*
  implements:
  - warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Authenticate(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
  id: Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
  parent: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  langs:
  - csharp
  - vb
  name: Execute(String, ICollection<KVPair>)
  nameWithType: CloudAdapter.Execute(String, ICollection<KVPair>)
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute(System.String, System.Collections.Generic.ICollection<warmup_project_teama_web_app.Models.KVPair>)
  type: Method
  source:
    remote:
      path: src/warmup-project-teama-web-app/Controllers/Adapters/CloudAdapter.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: Execute
    path: Controllers/Adapters/CloudAdapter.cs
    startLine: 50
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Controllers.Adapters
  syntax:
    content: public Task<TableViewModel> Execute(string userID, ICollection<KVPair> queryParams)
    parameters:
    - id: userID
      type: System.String
    - id: queryParams
      type: System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair}
    return:
      type: System.Threading.Tasks.Task{warmup_project_teama_web_app.Models.TableViewModel}
    content.vb: Public Function Execute(userID As String, queryParams As ICollection(Of KVPair)) As Task(Of TableViewModel)
  overload: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute*
  implements:
  - warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
  nameWithType.vb: CloudAdapter.Execute(String, ICollection(Of KVPair))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute(System.String, System.Collections.Generic.ICollection(Of warmup_project_teama_web_app.Models.KVPair))
  name.vb: Execute(String, ICollection(Of KVPair))
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel(System.Collections.Generic.List{RootStructure})
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel(System.Collections.Generic.List{RootStructure})
  id: ToViewModel(System.Collections.Generic.List{RootStructure})
  parent: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  langs:
  - csharp
  - vb
  name: ToViewModel(List<RootStructure>)
  nameWithType: CloudAdapter.ToViewModel(List<RootStructure>)
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel(System.Collections.Generic.List<RootStructure>)
  type: Method
  source:
    remote:
      path: src/warmup-project-teama-web-app/Controllers/Adapters/CloudAdapter.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: ToViewModel
    path: Controllers/Adapters/CloudAdapter.cs
    startLine: 101
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Controllers.Adapters
  syntax:
    content: public TableViewModel ToViewModel(List<RootStructure> json)
    parameters:
    - id: json
      type: System.Collections.Generic.List{RootStructure}
    return:
      type: warmup_project_teama_web_app.Models.TableViewModel
    content.vb: Public Function ToViewModel(json As List(Of RootStructure)) As TableViewModel
  overload: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel*
  implements:
  - warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel(System.Collections.Generic.List{RootStructure})
  nameWithType.vb: CloudAdapter.ToViewModel(List(Of RootStructure))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel(System.Collections.Generic.List(Of RootStructure))
  name.vb: ToViewModel(List(Of RootStructure))
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
  id: ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
  parent: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  langs:
  - csharp
  - vb
  name: ToDictionary(List<OtherInfoStructure>)
  nameWithType: CloudAdapter.ToDictionary(List<OtherInfoStructure>)
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary(System.Collections.Generic.List<OtherInfoStructure>)
  type: Method
  source:
    remote:
      path: src/warmup-project-teama-web-app/Controllers/Adapters/CloudAdapter.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: ToDictionary
    path: Controllers/Adapters/CloudAdapter.cs
    startLine: 127
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Controllers.Adapters
  syntax:
    content: public Dictionary<string, string> ToDictionary(List<OtherInfoStructure> otherInfoList)
    parameters:
    - id: otherInfoList
      type: System.Collections.Generic.List{OtherInfoStructure}
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Function ToDictionary(otherInfoList As List(Of OtherInfoStructure)) As Dictionary(Of String, String)
  overload: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary*
  implements:
  - warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
  nameWithType.vb: CloudAdapter.ToDictionary(List(Of OtherInfoStructure))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary(System.Collections.Generic.List(Of OtherInfoStructure))
  name.vb: ToDictionary(List(Of OtherInfoStructure))
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToRequestFormat
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToRequestFormat
  id: ToRequestFormat
  parent: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter
  langs:
  - csharp
  - vb
  name: ToRequestFormat()
  nameWithType: CloudAdapter.ToRequestFormat()
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToRequestFormat()
  type: Method
  source:
    remote:
      path: src/warmup-project-teama-web-app/Controllers/Adapters/CloudAdapter.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: ToRequestFormat
    path: Controllers/Adapters/CloudAdapter.cs
    startLine: 139
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Controllers.Adapters
  syntax:
    content: public string ToRequestFormat()
    return:
      type: System.String
    content.vb: Public Function ToRequestFormat As String
  overload: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToRequestFormat*
  implements:
  - warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToRequestFormat
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: warmup_project_teama_web_app.Controllers.Adapters
  commentId: N:warmup_project_teama_web_app.Controllers.Adapters
  name: warmup_project_teama_web_app.Controllers.Adapters
  nameWithType: warmup_project_teama_web_app.Controllers.Adapters
  fullName: warmup_project_teama_web_app.Controllers.Adapters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
  commentId: T:warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
  parent: warmup_project_teama_web_app.Controllers.Adapters
  name: ICloudAdapter
  nameWithType: ICloudAdapter
  fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.#ctor*
  commentId: Overload:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.#ctor
  name: CloudAdapter
  nameWithType: CloudAdapter.CloudAdapter
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.CloudAdapter
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Authenticate*
  commentId: Overload:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Authenticate
  name: Authenticate
  nameWithType: CloudAdapter.Authenticate
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Authenticate
- uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Authenticate(System.String)
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Authenticate(System.String)
  parent: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
  isExternal: true
  name: Authenticate(String)
  nameWithType: ICloudAdapter.Authenticate(String)
  fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Authenticate(System.String)
  spec.csharp:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Authenticate(System.String)
    name: Authenticate
    nameWithType: ICloudAdapter.Authenticate
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Authenticate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Authenticate(System.String)
    name: Authenticate
    nameWithType: ICloudAdapter.Authenticate
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Authenticate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute*
  commentId: Overload:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute
  name: Execute
  nameWithType: CloudAdapter.Execute
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.Execute
- uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
  parent: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
  isExternal: true
  name: Execute(String, ICollection<KVPair>)
  nameWithType: ICloudAdapter.Execute(String, ICollection<KVPair>)
  fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute(System.String, System.Collections.Generic.ICollection<warmup_project_teama_web_app.Models.KVPair>)
  nameWithType.vb: ICloudAdapter.Execute(String, ICollection(Of KVPair))
  fullName.vb: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute(System.String, System.Collections.Generic.ICollection(Of warmup_project_teama_web_app.Models.KVPair))
  name.vb: Execute(String, ICollection(Of KVPair))
  spec.csharp:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
    name: Execute
    nameWithType: ICloudAdapter.Execute
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: warmup_project_teama_web_app.Models.KVPair
    name: KVPair
    nameWithType: KVPair
    fullName: warmup_project_teama_web_app.Models.KVPair
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute(System.String,System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair})
    name: Execute
    nameWithType: ICloudAdapter.Execute
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: warmup_project_teama_web_app.Models.KVPair
    name: KVPair
    nameWithType: KVPair
    fullName: warmup_project_teama_web_app.Models.KVPair
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair}
  commentId: T:System.Collections.Generic.ICollection{warmup_project_teama_web_app.Models.KVPair}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KVPair>
  nameWithType: ICollection<KVPair>
  fullName: System.Collections.Generic.ICollection<warmup_project_teama_web_app.Models.KVPair>
  nameWithType.vb: ICollection(Of KVPair)
  fullName.vb: System.Collections.Generic.ICollection(Of warmup_project_teama_web_app.Models.KVPair)
  name.vb: ICollection(Of KVPair)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: warmup_project_teama_web_app.Models.KVPair
    name: KVPair
    nameWithType: KVPair
    fullName: warmup_project_teama_web_app.Models.KVPair
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: warmup_project_teama_web_app.Models.KVPair
    name: KVPair
    nameWithType: KVPair
    fullName: warmup_project_teama_web_app.Models.KVPair
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{warmup_project_teama_web_app.Models.TableViewModel}
  commentId: T:System.Threading.Tasks.Task{warmup_project_teama_web_app.Models.TableViewModel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TableViewModel>
  nameWithType: Task<TableViewModel>
  fullName: System.Threading.Tasks.Task<warmup_project_teama_web_app.Models.TableViewModel>
  nameWithType.vb: Task(Of TableViewModel)
  fullName.vb: System.Threading.Tasks.Task(Of warmup_project_teama_web_app.Models.TableViewModel)
  name.vb: Task(Of TableViewModel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: warmup_project_teama_web_app.Models.TableViewModel
    name: TableViewModel
    nameWithType: TableViewModel
    fullName: warmup_project_teama_web_app.Models.TableViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: warmup_project_teama_web_app.Models.TableViewModel
    name: TableViewModel
    nameWithType: TableViewModel
    fullName: warmup_project_teama_web_app.Models.TableViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel*
  commentId: Overload:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel
  name: ToViewModel
  nameWithType: CloudAdapter.ToViewModel
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToViewModel
- uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel(System.Collections.Generic.List{RootStructure})
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel(System.Collections.Generic.List{RootStructure})
  parent: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
  isExternal: true
  name: ToViewModel(List<RootStructure>)
  nameWithType: ICloudAdapter.ToViewModel(List<RootStructure>)
  fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel(System.Collections.Generic.List<RootStructure>)
  nameWithType.vb: ICloudAdapter.ToViewModel(List(Of RootStructure))
  fullName.vb: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel(System.Collections.Generic.List(Of RootStructure))
  name.vb: ToViewModel(List(Of RootStructure))
  spec.csharp:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel(System.Collections.Generic.List{RootStructure})
    name: ToViewModel
    nameWithType: ICloudAdapter.ToViewModel
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RootStructure
    name: RootStructure
    nameWithType: RootStructure
    fullName: RootStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel(System.Collections.Generic.List{RootStructure})
    name: ToViewModel
    nameWithType: ICloudAdapter.ToViewModel
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToViewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RootStructure
    name: RootStructure
    nameWithType: RootStructure
    fullName: RootStructure
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{RootStructure}
  commentId: T:System.Collections.Generic.List{RootStructure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RootStructure>
  nameWithType: List<RootStructure>
  fullName: System.Collections.Generic.List<RootStructure>
  nameWithType.vb: List(Of RootStructure)
  fullName.vb: System.Collections.Generic.List(Of RootStructure)
  name.vb: List(Of RootStructure)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RootStructure
    name: RootStructure
    nameWithType: RootStructure
    fullName: RootStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RootStructure
    name: RootStructure
    nameWithType: RootStructure
    fullName: RootStructure
  - name: )
    nameWithType: )
    fullName: )
- uid: warmup_project_teama_web_app.Models.TableViewModel
  commentId: T:warmup_project_teama_web_app.Models.TableViewModel
  parent: warmup_project_teama_web_app.Models
  name: TableViewModel
  nameWithType: TableViewModel
  fullName: warmup_project_teama_web_app.Models.TableViewModel
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: warmup_project_teama_web_app.Models
  commentId: N:warmup_project_teama_web_app.Models
  name: warmup_project_teama_web_app.Models
  nameWithType: warmup_project_teama_web_app.Models
  fullName: warmup_project_teama_web_app.Models
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary*
  commentId: Overload:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary
  name: ToDictionary
  nameWithType: CloudAdapter.ToDictionary
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToDictionary
- uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
  parent: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
  isExternal: true
  name: ToDictionary(List<OtherInfoStructure>)
  nameWithType: ICloudAdapter.ToDictionary(List<OtherInfoStructure>)
  fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary(System.Collections.Generic.List<OtherInfoStructure>)
  nameWithType.vb: ICloudAdapter.ToDictionary(List(Of OtherInfoStructure))
  fullName.vb: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary(System.Collections.Generic.List(Of OtherInfoStructure))
  name.vb: ToDictionary(List(Of OtherInfoStructure))
  spec.csharp:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
    name: ToDictionary
    nameWithType: ICloudAdapter.ToDictionary
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OtherInfoStructure
    name: OtherInfoStructure
    nameWithType: OtherInfoStructure
    fullName: OtherInfoStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary(System.Collections.Generic.List{OtherInfoStructure})
    name: ToDictionary
    nameWithType: ICloudAdapter.ToDictionary
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OtherInfoStructure
    name: OtherInfoStructure
    nameWithType: OtherInfoStructure
    fullName: OtherInfoStructure
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{OtherInfoStructure}
  commentId: T:System.Collections.Generic.List{OtherInfoStructure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<OtherInfoStructure>
  nameWithType: List<OtherInfoStructure>
  fullName: System.Collections.Generic.List<OtherInfoStructure>
  nameWithType.vb: List(Of OtherInfoStructure)
  fullName.vb: System.Collections.Generic.List(Of OtherInfoStructure)
  name.vb: List(Of OtherInfoStructure)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OtherInfoStructure
    name: OtherInfoStructure
    nameWithType: OtherInfoStructure
    fullName: OtherInfoStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OtherInfoStructure
    name: OtherInfoStructure
    nameWithType: OtherInfoStructure
    fullName: OtherInfoStructure
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToRequestFormat*
  commentId: Overload:warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToRequestFormat
  name: ToRequestFormat
  nameWithType: CloudAdapter.ToRequestFormat
  fullName: warmup_project_teama_web_app.Controllers.Adapters.CloudAdapter.ToRequestFormat
- uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToRequestFormat
  commentId: M:warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToRequestFormat
  parent: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter
  name: ToRequestFormat()
  nameWithType: ICloudAdapter.ToRequestFormat()
  fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToRequestFormat()
  spec.csharp:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToRequestFormat
    name: ToRequestFormat
    nameWithType: ICloudAdapter.ToRequestFormat
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToRequestFormat
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToRequestFormat
    name: ToRequestFormat
    nameWithType: ICloudAdapter.ToRequestFormat
    fullName: warmup_project_teama_web_app.Controllers.Adapters.ICloudAdapter.ToRequestFormat
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
