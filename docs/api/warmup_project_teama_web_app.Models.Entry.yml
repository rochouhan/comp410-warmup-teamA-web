### YamlMime:ManagedReference
items:
- uid: warmup_project_teama_web_app.Models.Entry
  commentId: T:warmup_project_teama_web_app.Models.Entry
  id: Entry
  parent: warmup_project_teama_web_app.Models
  children:
  - warmup_project_teama_web_app.Models.Entry.#ctor(System.String,System.Double,System.Double,System.DateTime,System.Collections.Generic.Dictionary{System.String,System.String})
  - warmup_project_teama_web_app.Models.Entry.date
  - warmup_project_teama_web_app.Models.Entry.latitude
  - warmup_project_teama_web_app.Models.Entry.longitude
  - warmup_project_teama_web_app.Models.Entry.otherinfo
  - warmup_project_teama_web_app.Models.Entry.uid
  langs:
  - csharp
  - vb
  name: Entry
  nameWithType: Entry
  fullName: warmup_project_teama_web_app.Models.Entry
  type: Class
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/Entry.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: Entry
    path: Models/Entry.cs
    startLine: 7
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public class Entry
    content.vb: Public Class Entry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: warmup_project_teama_web_app.Models.Entry.uid
  commentId: F:warmup_project_teama_web_app.Models.Entry.uid
  id: uid
  parent: warmup_project_teama_web_app.Models.Entry
  langs:
  - csharp
  - vb
  name: uid
  nameWithType: Entry.uid
  fullName: warmup_project_teama_web_app.Models.Entry.uid
  type: Field
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/Entry.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: uid
    path: Models/Entry.cs
    startLine: 9
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public string uid
    return:
      type: System.String
    content.vb: Public uid As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Models.Entry.latitude
  commentId: F:warmup_project_teama_web_app.Models.Entry.latitude
  id: latitude
  parent: warmup_project_teama_web_app.Models.Entry
  langs:
  - csharp
  - vb
  name: latitude
  nameWithType: Entry.latitude
  fullName: warmup_project_teama_web_app.Models.Entry.latitude
  type: Field
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/Entry.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: latitude
    path: Models/Entry.cs
    startLine: 10
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public double latitude
    return:
      type: System.Double
    content.vb: Public latitude As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Models.Entry.longitude
  commentId: F:warmup_project_teama_web_app.Models.Entry.longitude
  id: longitude
  parent: warmup_project_teama_web_app.Models.Entry
  langs:
  - csharp
  - vb
  name: longitude
  nameWithType: Entry.longitude
  fullName: warmup_project_teama_web_app.Models.Entry.longitude
  type: Field
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/Entry.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: longitude
    path: Models/Entry.cs
    startLine: 11
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public double longitude
    return:
      type: System.Double
    content.vb: Public longitude As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Models.Entry.date
  commentId: F:warmup_project_teama_web_app.Models.Entry.date
  id: date
  parent: warmup_project_teama_web_app.Models.Entry
  langs:
  - csharp
  - vb
  name: date
  nameWithType: Entry.date
  fullName: warmup_project_teama_web_app.Models.Entry.date
  type: Field
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/Entry.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: date
    path: Models/Entry.cs
    startLine: 12
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public DateTime date
    return:
      type: System.DateTime
    content.vb: Public date As Date
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Models.Entry.otherinfo
  commentId: F:warmup_project_teama_web_app.Models.Entry.otherinfo
  id: otherinfo
  parent: warmup_project_teama_web_app.Models.Entry
  langs:
  - csharp
  - vb
  name: otherinfo
  nameWithType: Entry.otherinfo
  fullName: warmup_project_teama_web_app.Models.Entry.otherinfo
  type: Field
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/Entry.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: otherinfo
    path: Models/Entry.cs
    startLine: 13
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public Dictionary<string, string> otherinfo
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public otherinfo As Dictionary(Of String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Models.Entry.#ctor(System.String,System.Double,System.Double,System.DateTime,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:warmup_project_teama_web_app.Models.Entry.#ctor(System.String,System.Double,System.Double,System.DateTime,System.Collections.Generic.Dictionary{System.String,System.String})
  id: '#ctor(System.String,System.Double,System.Double,System.DateTime,System.Collections.Generic.Dictionary{System.String,System.String})'
  parent: warmup_project_teama_web_app.Models.Entry
  langs:
  - csharp
  - vb
  name: Entry(String, Double, Double, DateTime, Dictionary<String, String>)
  nameWithType: Entry.Entry(String, Double, Double, DateTime, Dictionary<String, String>)
  fullName: warmup_project_teama_web_app.Models.Entry.Entry(System.String, System.Double, System.Double, System.DateTime, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/Entry.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: .ctor
    path: Models/Entry.cs
    startLine: 15
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public Entry(string uid, double latitude, double longitude, DateTime date, Dictionary<string, string> otherinfo)
    parameters:
    - id: uid
      type: System.String
    - id: latitude
      type: System.Double
    - id: longitude
      type: System.Double
    - id: date
      type: System.DateTime
    - id: otherinfo
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Sub New(uid As String, latitude As Double, longitude As Double, date As Date, otherinfo As Dictionary(Of String, String))
  overload: warmup_project_teama_web_app.Models.Entry.#ctor*
  nameWithType.vb: Entry.Entry(String, Double, Double, DateTime, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: warmup_project_teama_web_app.Models.Entry.Entry(System.String, System.Double, System.Double, System.DateTime, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Entry(String, Double, Double, DateTime, Dictionary(Of String, String))
references:
- uid: warmup_project_teama_web_app.Models
  commentId: N:warmup_project_teama_web_app.Models
  name: warmup_project_teama_web_app.Models
  nameWithType: warmup_project_teama_web_app.Models
  fullName: warmup_project_teama_web_app.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: warmup_project_teama_web_app.Models.Entry.#ctor*
  commentId: Overload:warmup_project_teama_web_app.Models.Entry.#ctor
  name: Entry
  nameWithType: Entry.Entry
  fullName: warmup_project_teama_web_app.Models.Entry.Entry
