### YamlMime:ManagedReference
items:
- uid: warmup_project_teama_web_app.Models.TableViewModel
  commentId: T:warmup_project_teama_web_app.Models.TableViewModel
  id: TableViewModel
  parent: warmup_project_teama_web_app.Models
  children:
  - warmup_project_teama_web_app.Models.TableViewModel.#ctor
  - warmup_project_teama_web_app.Models.TableViewModel.#ctor(System.Collections.Generic.List{warmup_project_teama_web_app.Models.Entry})
  - warmup_project_teama_web_app.Models.TableViewModel.table
  langs:
  - csharp
  - vb
  name: TableViewModel
  nameWithType: TableViewModel
  fullName: warmup_project_teama_web_app.Models.TableViewModel
  type: Class
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/TableViewModel.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: TableViewModel
    path: Models/TableViewModel.cs
    startLine: 7
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public class TableViewModel
    content.vb: Public Class TableViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: warmup_project_teama_web_app.Models.TableViewModel.table
  commentId: F:warmup_project_teama_web_app.Models.TableViewModel.table
  id: table
  parent: warmup_project_teama_web_app.Models.TableViewModel
  langs:
  - csharp
  - vb
  name: table
  nameWithType: TableViewModel.table
  fullName: warmup_project_teama_web_app.Models.TableViewModel.table
  type: Field
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/TableViewModel.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: table
    path: Models/TableViewModel.cs
    startLine: 9
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public List<Entry> table
    return:
      type: System.Collections.Generic.List{warmup_project_teama_web_app.Models.Entry}
    content.vb: Public table As List(Of Entry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Models.TableViewModel.#ctor
  commentId: M:warmup_project_teama_web_app.Models.TableViewModel.#ctor
  id: '#ctor'
  parent: warmup_project_teama_web_app.Models.TableViewModel
  langs:
  - csharp
  - vb
  name: TableViewModel()
  nameWithType: TableViewModel.TableViewModel()
  fullName: warmup_project_teama_web_app.Models.TableViewModel.TableViewModel()
  type: Constructor
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/TableViewModel.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: .ctor
    path: Models/TableViewModel.cs
    startLine: 11
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public TableViewModel()
    content.vb: Public Sub New
  overload: warmup_project_teama_web_app.Models.TableViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: warmup_project_teama_web_app.Models.TableViewModel.#ctor(System.Collections.Generic.List{warmup_project_teama_web_app.Models.Entry})
  commentId: M:warmup_project_teama_web_app.Models.TableViewModel.#ctor(System.Collections.Generic.List{warmup_project_teama_web_app.Models.Entry})
  id: '#ctor(System.Collections.Generic.List{warmup_project_teama_web_app.Models.Entry})'
  parent: warmup_project_teama_web_app.Models.TableViewModel
  langs:
  - csharp
  - vb
  name: TableViewModel(List<Entry>)
  nameWithType: TableViewModel.TableViewModel(List<Entry>)
  fullName: warmup_project_teama_web_app.Models.TableViewModel.TableViewModel(System.Collections.Generic.List<warmup_project_teama_web_app.Models.Entry>)
  type: Constructor
  source:
    remote:
      path: src/warmup-project-teama-web-app/Models/TableViewModel.cs
      branch: master
      repo: https://github.com/rochouhan/comp410-warmup-teamA-web.git
    id: .ctor
    path: Models/TableViewModel.cs
    startLine: 16
  assemblies:
  - warmup-project-teama-web-app
  namespace: warmup_project_teama_web_app.Models
  syntax:
    content: public TableViewModel(List<Entry> table)
    parameters:
    - id: table
      type: System.Collections.Generic.List{warmup_project_teama_web_app.Models.Entry}
    content.vb: Public Sub New(table As List(Of Entry))
  overload: warmup_project_teama_web_app.Models.TableViewModel.#ctor*
  nameWithType.vb: TableViewModel.TableViewModel(List(Of Entry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: warmup_project_teama_web_app.Models.TableViewModel.TableViewModel(System.Collections.Generic.List(Of warmup_project_teama_web_app.Models.Entry))
  name.vb: TableViewModel(List(Of Entry))
references:
- uid: warmup_project_teama_web_app.Models
  commentId: N:warmup_project_teama_web_app.Models
  name: warmup_project_teama_web_app.Models
  nameWithType: warmup_project_teama_web_app.Models
  fullName: warmup_project_teama_web_app.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{warmup_project_teama_web_app.Models.Entry}
  commentId: T:System.Collections.Generic.List{warmup_project_teama_web_app.Models.Entry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Entry>
  nameWithType: List<Entry>
  fullName: System.Collections.Generic.List<warmup_project_teama_web_app.Models.Entry>
  nameWithType.vb: List(Of Entry)
  fullName.vb: System.Collections.Generic.List(Of warmup_project_teama_web_app.Models.Entry)
  name.vb: List(Of Entry)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: warmup_project_teama_web_app.Models.Entry
    name: Entry
    nameWithType: Entry
    fullName: warmup_project_teama_web_app.Models.Entry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: warmup_project_teama_web_app.Models.Entry
    name: Entry
    nameWithType: Entry
    fullName: warmup_project_teama_web_app.Models.Entry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: warmup_project_teama_web_app.Models.TableViewModel.#ctor*
  commentId: Overload:warmup_project_teama_web_app.Models.TableViewModel.#ctor
  name: TableViewModel
  nameWithType: TableViewModel.TableViewModel
  fullName: warmup_project_teama_web_app.Models.TableViewModel.TableViewModel
